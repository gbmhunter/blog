---
import { LinkCard, CardGrid } from '@astrojs/starlight/components';
// import { getImage, Image } from "astro:assets";

// import { pageGlob, pageNodes } from '../PageHierarchy.ts';

import { getCollection, getEntry } from 'astro:content';

const { excludes=[] } = Astro.props;

const pagesCollection = await getCollection('docs2');

// e.g. the file at <collection root>/electronics/circuit-design/index.mdx produces the slug "electronics/circuit-design"
// Will be undefined if homepage (root index.mdx)
let currPageSlug = Astro.params.slug;
if (currPageSlug === undefined) {
  
  currPageSlug = undefined;
} else {
  currPageSlug = currPageSlug;
}

function checkIfChild(parentSlug: string | undefined, potentialChildSlug: string) {
  // Check if the current page is a parent of the page in the collection
  // Collection page needs to have one more part than the current page, and all parts of the current page need to match
  // first parts of the collection page

  let parentSlugParts: string[] = [];
  if (parentSlug === undefined) {
    parentSlugParts = [];
  } else {
    parentSlugParts = parentSlug.split('/');
  }
  const potentialChildSlugParts = potentialChildSlug.split('/');
  // console.log('parentSlugParts:', parentSlugParts);
  // console.log('potentialChildSlugParts:', potentialChildSlugParts);
  if (potentialChildSlugParts.length !== parentSlugParts.length + 1) {
    return false;
  }
  for (let i = 0; i < parentSlugParts.length; i++) {
    if (parentSlugParts[i] !== potentialChildSlugParts[i]) {
      return false;
    }
  }
  return true;
} 

let count = 0;
let childPages: any = [];
for (const collectionPage of pagesCollection) {
  // console.log(page);
  if (count > 9900) {
    break;
  }
  count++;

  // The index.mdx file at the root of the collection is a special case, it returns
  // the slug "index" which is not a child of any other page, so just exclude it here
  // otherwise it will appear to be a child page of the homepage
  if (collectionPage.slug === 'index') {
    continue;
  }

  // console.log('Checking slug:', collectionPage.slug);
  const isChild = checkIfChild(currPageSlug, collectionPage.slug);
  if (!isChild) {
    continue;
  }

  // Make sure the child page passes the exclude filter
  const collectionPageSlugParts = collectionPage.slug.split('/');
  // console.log('exclude:', excludes);
  // console.log('collectionPageSlugParts:', collectionPageSlugParts);
  if (excludes.includes(collectionPageSlugParts[collectionPageSlugParts.length - 1])) {
    continue;
  }

  // console.log('Found child page:', collectionPage.slug);
  childPages.push(collectionPage);
}
// console.log('Child pages:', childPages);

// console.log(Astro.params); // slug: electronics/circuit-design
// console.log(Astro.url); // pathaame: /electronics/circuit-design/
---

<CardGrid>
  {
    childPages.map((childPage: any) => (
      <LinkCard title={childPage.data.title} href={'/' + childPage.slug + '/'} description={childPage.data.description} />
    ))
  }
</CardGrid>
