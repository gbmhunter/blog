---
import { Image as AstroImage } from 'astro:assets';

const { src, width, float='none', ...attrs } = Astro.props;
let href;
// src is a Promise if the syntax "import('path/to/image.jpg')" is used
// src is an Object is the syntax "import myImage from 'path/to/image.jpg'" is used
// src is a string if the syntax "/public/path/to/image.jpg" is used (i.e. not an import)
// When the image is not imported, Astro's image component requires a width and a height. We
// don't want to specify a height, so in this case we skip over Astro's image component and
// just use a regular img tag.
let imported = true;
if (src instanceof Promise) {
  const resolvedImg = await src;
  href = resolvedImg.default.src;
} else if (src instanceof Object) {
  href = src.src;
} else if (typeof src === 'string') {
  href = src;
  imported = false;
} else {
  throw new Error('Image src is not a string, object or promise.');
}
---

<div class:list={['image-wrapper']}>
  <a href={href}>
    {imported ? <AstroImage src={src} width={width} alt="" {...attrs} /> : null}
    {!imported ? <img src={src} width={width} alt="" /> : null}
  </a>
  <figcaption><slot /></figcaption>
</div>

<style define:vars={{ width, float }}>
  .image-wrapper {
    display: flex;
    flex-direction: column;
    align-items: center;
    margin: 1rem 0;
    float: var(--float);
  }

  :root {
    --caption-text-color: #666;
  }

  :root[data-theme="dark"] {
    --caption-text-color: #aaa;
  }
  
  figcaption {
    font-size: 1.0rem;
    font-style: italic;
    color: var(--caption-text-color);
    margin-top: 0.5rem;
    min-width: 100px; /* Don't make the caption too narrow if image is small */
    max-width: 100%; /* Make sure caption never exceeds the page width */
    width: var(--width);
    text-align: center;
    overflow-wrap: break-word; /* Makes sure long word like URLs don't overflow */
  }

</style>